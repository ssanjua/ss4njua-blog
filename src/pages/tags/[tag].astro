---
import { SITE } from "src/config";
import Layout from "@layouts/Layout.astro";
import Main from "@layouts/Main.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import Card from "@components/Card";
import getUniqueTags from "@utils/getUniqueTags";
import getPostsByTag from "@utils/getPostsByTag";
import type { MarkdownInstance } from "astro";
import type { Frontmatter } from "src/types";
import slugify from "@utils/slugify";

export interface Props {
  post: MarkdownInstance<Frontmatter>;
  tag: string;
}

export async function getStaticPaths() {
  const posts: MarkdownInstance<Frontmatter>[] = await Astro.glob(
    "../../contents/writeups/*.md"
  );
  const cheats: MarkdownInstance<Frontmatter>[] = await Astro.glob(
    "../../contents/cheatsheets/*.md"
  );

  const postTags = getUniqueTags(posts);
  const cheatTags = getUniqueTags(cheats)

  const tags = [...new Set([...postTags, ...cheatTags])];
  
  return tags.map((tag) => {
    return {
      params: {
        tag,
      },
      props: {
        tag,
      },
    };
  });
}

const { tag } = Astro.props;

const posts: MarkdownInstance<Frontmatter>[] = await Astro.glob(
  "../../contents/writeups/*.md"
);
const cheats: MarkdownInstance<Frontmatter>[] = await Astro.glob(
  "../../contents/cheatsheets/*.md"
)

const tagPosts = getPostsByTag(posts, tag);
const cheatPost = getPostsByTag(cheats, tag)

const combinedTags = [...tagPosts, ...cheatPost]
---

<Layout title={`Tag:${tag} | ${SITE.title}`}>
  <Header activeNav="writeups" />
  <Main
    pageTitle={`Tag:${tag}`}
    pageDesc={`Posts with the tag "${tag}".`}
  >
    <ul>
      {
        combinedTags.map(({ frontmatter }) => (
          <Card href={`/posts/${slugify(frontmatter)}`} post={frontmatter} />
        ))
      }
    </ul>
  </Main>
  <Footer />
</Layout>